% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_geo_table.R
\name{all_geo_table}
\alias{all_geo_table}
\title{Make ACS table for several geos}
\usage{
all_geo_table(town_lookup, table.number, year = 2015, regions, state = 9)
}
\arguments{
\item{town_lookup}{A data.frame or tbl. Must have columns \code{town} and \code{county}, as generated by \code{\link{get_town_names}}}

\item{table.number}{String corresponding to an ACS table number; this is case-sensitive}

\item{year}{Endyear of ACS estimates as a four-digit integer}

\item{regions}{A named list of character vectors with names of towns for each region}

\item{state}{Either a number corresponding to the state's FIPS code, or a string with the state's two-letter abbreviation or full name}
}
\value{
Returns an \code{\link[acs]{acs-class}} object, as is standard from the \code{acs} package.
}
\description{
Makes an ACS table for state, regions, counties, and towns
}
\examples{
ct_towns <- get_town_names(state = 9)
regions <- list(
  "Greater New Haven" = c("Hamden", "East Haven", "West Haven", "Milford", "Orange", "Bethany", "Woodbridge", "North Haven", "Branford", "North Branford", "Madison", "Guilford", "New Haven"),
  "Inner Ring" = c("Hamden", "East Haven", "West Haven"),
  "Outer Ring" = c("Milford", "Orange", "Bethany", "Woodbridge", "North Haven", "Branford", "North Branford", "Madison", "Guilford")
)
populations <- all_geo_table(ct_towns, "B01003", 2015, regions = regions, state = 9)

}
\seealso{
\code{\link{make_regional_geo}}, called by this function, and \code{\link{get_town_names}}, which returns a dataframe appropriate for \code{town_lookup}
}
